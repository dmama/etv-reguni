# Connection to RCPers
rcpers.url=http://rp-ws-va.etat-de-vaud.ch/registres/int-rcpers/west/ws/v5

# Connection to RCEnt
rcent.url=http://rp-ws-va.etat-de-vaud.ch/registres/int-rcent/services/v1
rcent.validate=true
rcent.enabled=false
rcent.frqPriseEnCompte=1

# Connection to FiDoR
fidor.url=http://rp-ws-va.etat-de-vaud.ch/fiscalite/int-fidor/ws/v5

# Connection to Unireg's Oracle DB (r/w !!)
unireg.jdbc.driver.class=oracle.jdbc.OracleDriver
unireg.jdbc.url=jdbc:oracle:thin:@sli2824v.etat-de-vaud.ch:1527/UNIREGD
unireg.jdbc.schema=${unireg.jdbc.user}
unireg.jdbc.pool.size=4

# Connection to RegPM's DB2 database (ro)
regpm.jdbc.driver.class=com.ibm.db2.jcc.DB2Driver
regpm.jdbc.url=jdbc:db2://ssv0214v:50000/DB2A
regpm.jdbc.schema=CIIV1
regpm.jdbc.pool.size=1

# répertoire du mini-indexeur pour les non-habitants existants d'Unireg
indexeur.nh.dir=/tmp/indexeur-nh

# faut-il re-créer (true, a priori pour la production) un nouvel indexeur des non-habitants ou utiliser l'existant (false, en tests...)
indexeur.nh.create=true
indexeur.nh.threads.nb=8

# la migration doit-elle être lancée (false pendant les tests unitaires...)
migrator.enabled=true

# nombre de threads utilisés par la migration (en écriture dans Unireg)
migrator.threads.nb=4

# mode de migration (NOOP, DUMP, FROM_DUMP, DIRECT)
#migration.mode=NOOP
#migration.mode=DUMP
#migration.mode=FROM_DUMP
migration.mode=DIRECT

# fichier des numéros de PM (dans RegPM) à prendre en compte dans la migration en provenance de RegPM (modes DUMP et DIRECT)
# (une ligne par numéro, chaque numéro présent seul sur la ligne)
# si la variable est vide, tout est pris depuis RegPM (= ce sera la configuration de production)
migration.test.extracted.pm.file=

# répertoire utilisé pour les modes DUMP et FROM_DUMP
migration.dump.dir=/tmp/dump

# Fichier de configuration des mappings pour les numéros d'ordre poste
mapping.noOrdreP.file=.../donnees-disparues-refinf-avec-candidats.csv

# Fichier de configuration des numéros des entreprises encore actives au niveau de la perception
# (une ligne par numéro, chaque numéro présent seul avec un flag ADB_SEUL sur la ligne)
activite.flag.perception.file=.../nos-ctbs-actifs-perception.csv

# Fichier CSV généré par le script buildMunicipalityData.sh à partir des données brutes RefInf
fusions.communes.file=.../municipalityData.csv

# Fichier CSV en entrée qui liste les contribuables PM dont on sait qu'ils sont des doublons et doivent être annulés
# (une ligne par numéro, seule la première colonne prise en compte), ignoré si vide
doublons.file=

# Les dates antérieures à cette date (format DD.MM.AAAA) sont considérées comme "louches" (et logguées en WARN)
seuil.date.normale=01.01.1900

# Date (au format DD.MM.AAAA) qui indique le seuil au-delà duquel une entreprise est considérée comme active
seuil.activite=01.01.2015

# Les mandats fermés avant cette date (format DD.MM.AAAA) ne sont pas repris
seuil.mandats.repris=01.01.2008
