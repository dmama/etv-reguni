<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<bean id="evenementFiscalSender" class="ch.vd.uniregctb.evenement.fiscal.MockEvenementFiscalSender" />
	<bean id="editiqueService" class="ch.vd.uniregctb.editique.mock.MockEditiqueService"/>
	<bean id="editiqueCompositionService" class="ch.vd.uniregctb.editique.mock.MockEditiqueCompositionService"/>
	<bean id="evenementDeclarationPPSender" class="ch.vd.uniregctb.evenement.di.MockEvenementDeclarationPPSender"/>
	<bean id="evenementDeclarationPMSender" class="ch.vd.uniregctb.evenement.di.MockEvenementDeclarationPMSender"/>
	<bean id="bamMessageSender" class="ch.vd.uniregctb.jms.MockBamMessageSender"/>

	<!-- Bean client interfacesService MOCK -->
	<bean id="serviceInfrastructureRaw" class="ch.vd.unireg.interfaces.infra.mock.DefaultMockServiceInfrastructureService"/>
	<bean id="serviceInfrastructureService" class="ch.vd.uniregctb.interfaces.service.ServiceInfrastructureImpl">
		<property name="rawService" ref="serviceInfrastructureRaw" />
		<property name="tiersDAO" ref="tiersDAO"/>
	</bean>

	<!-- Bean client ServiceCivil MOCK -->
	<bean id="serviceCivilRaw" class="ch.vd.unireg.interfaces.civil.mock.DefaultMockServiceCivil" />
	<bean id="serviceCivilService" class="ch.vd.uniregctb.interfaces.service.ServiceCivilImpl">
		<property name="infraService" ref="serviceInfrastructureService"/>
		<property name="target" ref="serviceCivilRaw"/>
		<property name="serviceLogger" ref="serviceCivilLogger"/>
	</bean>

	<bean id="serviceCivilLogger" class="ch.vd.uniregctb.interfaces.service.ServiceCivilLoggerImpl"/>
	<alias alias="serviceCivilInterceptor" name="serviceCivilLogger"/>

	<!-- -->

	<bean id="serviceSecuriteServiceHost" class="ch.vd.uniregctb.interfaces.service.mock.DefaultMockServiceSecurite"  />
	<alias alias="serviceSecuriteService" name="serviceSecuriteServiceHost"/>

	<!-- Mock service BVR -->
	<bean id="bvrPlusClient" class="ch.vd.uniregctb.webservice.sipf.MockBVRPlusClient"/>

	<!-- Mock des différents checkers -->
	<bean id="serviceCivilChecker" class="ch.vd.uniregctb.checker.MockServiceChecker"/>
	<bean id="serviceInfraChecker" class="ch.vd.uniregctb.checker.MockServiceChecker"/>
	<bean id="serviceSecuriteChecker" class="ch.vd.uniregctb.checker.MockServiceChecker"/>
	<bean id="serviceBVRChecker" class="ch.vd.uniregctb.checker.MockServiceChecker"/>

	<!-- Mock pour la e-Facture -->
	<bean id="eFactureMessageSender" class="ch.vd.uniregctb.efacture.MockEFactureMessageSender" />
	<bean id="eFactureClient" class="ch.vd.uniregctb.wsclient.efacture.MockClientEFacture"/>

	<!-- Mocks pour la gestion des événements civil -->
	<bean id="evtCivilEchProcessorRetry" class="ch.vd.uniregctb.evenement.civil.engine.ech.MockEvenementCivilEchRetryProcessor"/>
	<bean id="evenementCivilEchStrategyParameters" class="ch.vd.uniregctb.evenement.civil.engine.ech.EvenementCivilEchStrategyParametersImpl">
		<property name="decalageMaxPourDepart" value="0"/>
	</bean>
	<bean id="evtCivilEchNotificationQueue" class="ch.vd.uniregctb.evenement.civil.engine.ech.MockEvenementCivilNotificationQueue"/>
	<bean id="evtCivilEchProcessor" class="ch.vd.uniregctb.evenement.civil.engine.ech.MockEvenementCivilEvenementProcessor"/>

	<!-- Mocks pour la gestion des événements organisation -->
	<bean id="evtOrganisationProcessorRetry" class="ch.vd.uniregctb.evenement.organisation.engine.MockEvenementOrganisationRetryProcessor"/>
	<bean id="evtOrganisationNotificationQueue" class="ch.vd.uniregctb.evenement.organisation.engine.MockEvenementOrganisationNotificationQueue"/>
	<bean id="evtOrganisationProcessor" class="ch.vd.uniregctb.evenement.organisation.engine.MockEvenementOrganisationEvenementProcessor"/>


</beans>
