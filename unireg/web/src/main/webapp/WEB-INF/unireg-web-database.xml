<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!-- Audit -->
	<bean id="auditManager" class="ch.vd.uniregctb.audit.AuditManager">
		<property name="auditLineDAO" ref="auditLineDAO" />
		<!-- BEGIN_LVERSION -->
		<property name="appName" value="Web (version 7.2.0-SNAPSHOT)" />
		<!-- END_LVERSION -->
	</bean>

	<!-- Transaction manager configuration -->

	<bean id="atomikosSystemProps" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject">
			<!-- System.getProperties() -->
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="java.lang.System" />
				<property name="targetMethod" value="getProperties" />
			</bean>
		</property>
		<property name="targetMethod" value="putAll" />
		<property name="arguments">
			<!-- The new Properties -->
			<util:properties>
				<prop key="com.atomikos.icatch.hide_init_file_path">true</prop>
				<prop key="com.atomikos.icatch.registered">so what?</prop>          <!-- pour enlever le message de pub au démarrage -->
			</util:properties>
		</property>
	</bean>

	<bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp" init-method="init" destroy-method="shutdownForce" depends-on="atomikosSystemProps">
		<constructor-arg>
			<props>
				<prop key="com.atomikos.icatch.max_timeout">0</prop>                <!-- en millisecondes, la durée maximale admissible pour le timeout d'une transaction : aucune -->
				<prop key="com.atomikos.icatch.default_jta_timeout">3600000</prop>  <!-- en millisecondes, le timeout par défaut d'une transaction JTA : 1h -->
				<prop key="com.atomikos.icatch.log_base_dir">${extprop.tx.logDir}</prop>
				<prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
				<prop key="com.atomikos.icatch.max_actives">-1</prop>               <!-- valeur négative -> pas de nombre maximum de transactions ouvertes simultanément -->
				<prop key="com.atomikos.icatch.tm_unique_name">unireg-web</prop>    <!-- nom unique du transaction manager -->
			</props>
		</constructor-arg>
	</bean>

	<!-- Transaction manager -->

	<bean id="userTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close" depends-on="userTransactionService">
		<!-- disable startup because the userTransactionService bean does it -->
		<property name="startupTransactionService" value="false"/>
		<!-- when close is called, should we force transactions to terminate or not? -->
		<property name="forceShutdown" value="false"/>
	</bean>

	<bean id="userTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="userTransactionService">
		<property name="transactionTimeout" value="3600"/>
	</bean>

	<bean id="txSyncManager" class="ch.vd.uniregctb.transaction.TxSyncManagerImpl"/>

	<bean id="tracingTransactionManager" class="ch.vd.uniregctb.transaction.TracingTransactionManager">
		<property name="target" ref="userTransactionManager"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" depends-on="userTransactionService, jmsConnectionFactory, dataSource">
		<property name="transactionManager" ref="tracingTransactionManager"/>
		<property name="userTransaction" ref="userTransaction"/>
	</bean>

	<!-- JDBC datasource -->

	<bean id="xaDataSource" class="ch.vd.uniregctb.datasource.OracleXADataSourceFactory">
		<property name="driverType" value="thin" />
		<property name="serverName" value="${extprop.jdbc.server}" />
		<property name="portNumber" value="${extprop.jdbc.port}" />
		<property name="databaseName" value="${extprop.jdbc.instance}" />
		<property name="serviceName" value="${extprop.jdbc.service}" />
		<property name="userName" value="${extprop.jdbc.username}" />
		<property name="password" value="${extprop.jdbc.password}" />
	</bean>

	<bean id="realDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean">
		<property name="uniqueResourceName" value="jdbc-web"/>
		<property name="xaDataSource" ref="xaDataSource"/>
		<property name="maxPoolSize" value="${extprop.jdbc.poolMaxSize}"/>
	</bean>

	<bean id="debugDataSource" class="ch.vd.registre.base.dbutils.DebugDataSource">
		<property name="target" ref="realDataSource" />
		<property name="maxConnections" value="${extprop.jdbc.poolMaxSize}" />
		<property name="enabled" value="${extprop.jdbc.datasource.debug}" />
	</bean>

	<bean id="tracingDataSource" class="ch.vd.uniregctb.database.TracingDataSource">
		<property name="target" ref="debugDataSource" />
		<property name="statsService" ref="statsService" />
		<property name="enabled" value="${extprop.jdbc.datasource.tracing}" />
	</bean>

	<alias alias="dataSource" name="tracingDataSource"/>

	<bean id="hibernateDialect" class="${oracle.hibernate.dialect}"/>

	<!-- hibernateProperties specifiques à cette datasource. -->
	<util:map id="hibernateProperties">
		<entry key="hibernate.connection.autocommit" value="false" />
		<entry key="hibernate.query.factory_class" value="org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory" />
		<entry key="hibernate.show_sql" value="false" />
		<entry key="hibernate.jdbc.batch_size" value="0" />
		<entry key="hibernate.jdbc.use_streams_for_binary" value="true" />
		<entry key="hibernate.dialect" value="${oracle.hibernate.dialect}" />
		<entry key="hibernate.query.substitutions" value="${oracle.hibernate.query.substitutions}" />
		<entry key="hibernate.hbm2ddl.auto" value="${extprop.hibernate.hbm2ddl.mode}" />
		<entry key="hibernate.default_schema" value="${extprop.hibernate.schema}" />
	</util:map>

</beans>
