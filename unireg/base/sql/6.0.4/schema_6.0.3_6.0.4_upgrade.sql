-- Version
INSERT INTO VERSION_DB (VERSION_NB, SCRIPT_ID) VALUES ('6.0.4', '6.0.3_6.0.4_upgrade');

--
-- Nouvelle mouture des événements fiscaux
--

-- Mise de côté de l'ancienne table
ALTER TABLE EVENEMENT_FISCAL DROP CONSTRAINT FK_EV_FSC_TRS_ID;
RENAME EVENEMENT_FISCAL TO EVENEMENT_FISCAL_LEGACY;

-- Création de la nouvelle table
CREATE TABLE EVENEMENT_FISCAL (
	ID NUMBER(19,0) NOT NULL,
	ANNULATION_DATE TIMESTAMP,
	ANNULATION_USER NVARCHAR2(65),
	LOG_CDATE TIMESTAMP,
	LOG_CUSER NVARCHAR2(65),
	LOG_MDATE TIMESTAMP,
	LOG_MUSER NVARCHAR2(65),
	EVT_TYPE NVARCHAR2(29) NOT NULL,
	DATE_VALEUR NUMBER(10,0) NOT NULL,
	TIERS_ID NUMBER(19,0) NOT NULL,
	PARENTE_ENFANT_ID NUMBER(19,0),
	TYPE_EVT_PARENTE NVARCHAR2(25),
	FOR_FISCAL_ID NUMBER(19,0),
	TYPE_EVT_FOR NVARCHAR2(20),
	ALLEGEMENT_ID NUMBER(19,0),
	TYPE_EVT_ALLEGEMENT NVARCHAR2(15),
	TYPE_EVT_INFO_COMPL NVARCHAR2(60),
	DECLARATION_ID NUMBER(19,0),
	TYPE_EVT_DECLARATION NVARCHAR2(15),
	REGIME_FISCAL_ID NUMBER(19,0),
	TYPE_EVT_REGIME NVARCHAR2(15),
	PRIMARY KEY (ID)
);
ALTER TABLE EVENEMENT_FISCAL ADD CONSTRAINT FK_EVTFISC_TIERS_ID FOREIGN KEY (TIERS_ID) REFERENCES TIERS;
ALTER TABLE EVENEMENT_FISCAL ADD CONSTRAINT FK_EVTFISC_ENFANT_ID FOREIGN KEY (PARENTE_ENFANT_ID) REFERENCES TIERS;
ALTER TABLE EVENEMENT_FISCAL ADD CONSTRAINT FK_EVTFISC_FOR_ID FOREIGN KEY (FOR_FISCAL_ID) REFERENCES FOR_FISCAL;
ALTER TABLE EVENEMENT_FISCAL ADD CONSTRAINT FK_EVTFISC_ALLGMT_ID FOREIGN KEY (ALLEGEMENT_ID) REFERENCES ALLEGEMENT_FISCAL;
ALTER TABLE EVENEMENT_FISCAL ADD CONSTRAINT FK_EVTFISC_DECL_ID FOREIGN KEY (DECLARATION_ID) REFERENCES DECLARATION;
ALTER TABLE EVENEMENT_FISCAL ADD CONSTRAINT FK_EVTFISC_REGFISC_ID FOREIGN KEY (REGIME_FISCAL_ID) REFERENCES REGIME_FISCAL;

--
-- Agrandissement de la colonne du type des annonces RCEnt
--
ALTER TABLE EVENEMENT_ORGANISATION MODIFY ("TYPE" NVARCHAR2(120));

--
-- Distinction entre les tâches d'envoi de DI PP et PM (les tâches déjà existantes sont toujours
-- relatives aux PP)
--
UPDATE TACHE SET TACHE_TYPE='ENVOI_DI_PP' WHERE TACHE_TYPE='ENVOI_DI';

--
-- Distinction entre les paramètages PP et PF par période fiscale
--
ALTER TABLE PARAMETRE_PERIODE_FISCALE ADD PPF_TYPE NVARCHAR2(5);
UPDATE PARAMETRE_PERIODE_FISCALE SET PPF_TYPE='PP';
ALTER TABLE PARAMETRE_PERIODE_FISCALE MODIFY PPF_TYPE NVARCHAR2(5) NOT NULL;
ALTER TABLE PARAMETRE_PERIODE_FISCALE ADD PM_DELAI_IMPRIME NUMBER(10,0);
ALTER TABLE PARAMETRE_PERIODE_FISCALE ADD PM_DELAI_IMPRIME_MANDATAIRE NUMBER(10,0);
ALTER TABLE PARAMETRE_PERIODE_FISCALE ADD PM_DELAI_EFF NUMBER(10,0);
ALTER TABLE PARAMETRE_PERIODE_FISCALE ADD PM_DELAI_EFF_MANDATAIRE NUMBER(10,0);
INSERT INTO PARAMETRE_PERIODE_FISCALE (ID, LOG_CDATE, LOG_CUSER, LOG_MDATE, LOG_MUSER, PPF_TYPE, PERIODE_ID, TYPE_CTB, PM_DELAI_IMPRIME, PM_DELAI_IMPRIME_MANDATAIRE, PM_DELAI_EFF, PM_DELAI_EFF_MANDATAIRE)
	SELECT HIBERNATE_SEQUENCE.NEXTVAL, CURRENT_DATE, '[Installation SIPM]', CURRENT_DATE, '[Installation SIPM]', 'PM', PF.ID, 'VAUDOIS_ORDINAIRE', 210, 255, 210, 255 FROM PERIODE_FISCALE PF;
INSERT INTO PARAMETRE_PERIODE_FISCALE (ID, LOG_CDATE, LOG_CUSER, LOG_MDATE, LOG_MUSER, PPF_TYPE, PERIODE_ID, TYPE_CTB, PM_DELAI_IMPRIME, PM_DELAI_IMPRIME_MANDATAIRE, PM_DELAI_EFF, PM_DELAI_EFF_MANDATAIRE)
	SELECT HIBERNATE_SEQUENCE.NEXTVAL, CURRENT_DATE, '[Installation SIPM]', CURRENT_DATE, '[Installation SIPM]', 'PM', PF.ID, 'HORS_CANTON', 210, 255, 210, 255 FROM PERIODE_FISCALE PF;
INSERT INTO PARAMETRE_PERIODE_FISCALE (ID, LOG_CDATE, LOG_CUSER, LOG_MDATE, LOG_MUSER, PPF_TYPE, PERIODE_ID, TYPE_CTB, PM_DELAI_IMPRIME, PM_DELAI_IMPRIME_MANDATAIRE, PM_DELAI_EFF, PM_DELAI_EFF_MANDATAIRE)
	SELECT HIBERNATE_SEQUENCE.NEXTVAL, CURRENT_DATE, '[Installation SIPM]', CURRENT_DATE, '[Installation SIPM]', 'PM', PF.ID, 'HORS_SUISSE', 210, 255, 210, 255 FROM PERIODE_FISCALE PF;

--
-- Le champ "faut-il mettre le code de contrôle sur la sommation de DI" existe pour la DI PP seulement pour le moment
-- (s'il existe un jour pour la DI PM, alors il y aura un autre champ car rien n'oblige les cycles à être synchrones)
--
ALTER TABLE PERIODE_FISCALE RENAME COLUMN CODE_CTRL_SOMM_DI TO CODE_CTRL_SOMM_DI_PP;

--
-- Les états d'entreprise
--
CREATE TABLE ETAT_ENTREPRISE (
	ID NUMBER(19, 0) NOT NULL,
	ANNULATION_DATE TIMESTAMP,
	ANNULATION_USER NVARCHAR2(65),
	LOG_CDATE TIMESTAMP,
	LOG_CUSER NVARCHAR2(65),
	LOG_MDATE TIMESTAMP,
	LOG_MUSER NVARCHAR2(65),
	DATE_DEBUT NUMBER(10, 0) NOT NULL,
	DATE_FIN NUMBER(10, 0),
	TYPE_ETAT NVARCHAR2(20) NOT NULL,
	ENTREPRISE_ID NUMBER(19, 0) NOT NULL,
	PRIMARY KEY (ID)
);
ALTER TABLE ETAT_ENTREPRISE ADD CONSTRAINT FK_ETAENT_ENTR_ID FOREIGN KEY (ENTREPRISE_ID) REFERENCES TIERS;
CREATE INDEX IDX_ETAENT_ENTR_ID ON ETAT_ENTREPRISE(ENTREPRISE_ID ASC);
