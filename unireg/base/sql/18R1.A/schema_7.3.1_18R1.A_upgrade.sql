-- Version
INSERT INTO VERSION_DB (VERSION_NB, SCRIPT_ID) VALUES ('18R1.A', '7.3.1_18R1.A_upgrade');

-- [SIFISC-26536] Suppression de la table IMMEUBLE (données de l'extraction Michot)
DROP TABLE IMMEUBLE;

-- [SIFISC-24999] Sélection du principal des communautés d'héritiers Unireg
ALTER TABLE RAPPORT_ENTRE_TIERS ADD PRINCIPAL_COMM_HERITIERS NUMBER(1) NULL;

-- SIFISC-21866 Cycle de vie des autres documents fiscaux comme les DI (Unification DI - Autres documents)
ALTER TABLE DECLARATION RENAME TO DOCUMENT_FISCAL;
ALTER TABLE DOCUMENT_FISCAL DROP CONSTRAINT FK_DECL_TRS_ID;
ALTER TABLE DOCUMENT_FISCAL ADD CONSTRAINT FK_DOCFISC_TRS_ID FOREIGN KEY (TIERS_ID) REFERENCES TIERS;
ALTER TABLE DOCUMENT_FISCAL DROP CONSTRAINT FK_DECL_DOC_ID;
ALTER TABLE DOCUMENT_FISCAL ADD CONSTRAINT FK_DOCFISC_MODOC_ID FOREIGN KEY (MODELE_DOC_ID) REFERENCES MODELE_DOCUMENT;
ALTER TABLE DOCUMENT_FISCAL DROP CONSTRAINT FK_DECL_PF_ID;
ALTER TABLE DOCUMENT_FISCAL ADD CONSTRAINT FK_DOCFISC_PF_ID FOREIGN KEY (PERIODE_ID) REFERENCES PERIODE_FISCALE;
ALTER TABLE DOCUMENT_FISCAL MODIFY DATE_DEBUT NULL;
ALTER TABLE DOCUMENT_FISCAL MODIFY DATE_FIN NULL;
ALTER TABLE DOCUMENT_FISCAL MODIFY PERIODE_ID NULL;
DROP INDEX IDX_DECL_TRS_ID;
DROP INDEX IDX_SFZ;

ALTER TABLE DELAI_DECLARATION RENAME TO DELAI_DOCUMENT_FISCAL;
DROP INDEX IDX_DE_DI_DI_ID;
ALTER TABLE DELAI_DOCUMENT_FISCAL ADD DELAI_TYPE NVARCHAR2(31);
UPDATE DELAI_DOCUMENT_FISCAL SET DELAI_TYPE = 'DELAI_DECLARATION' WHERE DELAI_TYPE IS NULL;
ALTER TABLE DELAI_DOCUMENT_FISCAL MODIFY DELAI_TYPE NOT NULL;
ALTER TABLE DELAI_DOCUMENT_FISCAL RENAME COLUMN DECLARATION_ID TO DOCUMENT_FISCAL_ID;
ALTER TABLE DELAI_DOCUMENT_FISCAL DROP CONSTRAINT FK_DECL_DEL_DI_ID;
ALTER TABLE DELAI_DOCUMENT_FISCAL ADD CONSTRAINT FK_DEL_DOCFISC_DOCFISC_ID FOREIGN KEY (DOCUMENT_FISCAL_ID) REFERENCES DOCUMENT_FISCAL;

ALTER TABLE ETAT_DECLARATION RENAME TO ETAT_DOCUMENT_FISCAL;
DROP INDEX IDX_ET_DI_DI_ID;
DROP INDEX IDX_ED_LOG_MDATE;
DROP INDEX IDX_ET_DI_SOMM_DI;
ALTER TABLE ETAT_DOCUMENT_FISCAL ADD ETAT_TYPE NVARCHAR2(31);
UPDATE ETAT_DOCUMENT_FISCAL SET ETAT_TYPE = 'DI_EMISE', TYPE = 'EMIS' WHERE TYPE = 'EMISE';
UPDATE ETAT_DOCUMENT_FISCAL SET ETAT_TYPE = 'DI_SOMMEE', TYPE = 'SOMME' WHERE TYPE = 'SOMMEE';
UPDATE ETAT_DOCUMENT_FISCAL SET ETAT_TYPE = 'DI_RAPPELEE', TYPE = 'RAPPELE' WHERE TYPE = 'RAPPELEE';
UPDATE ETAT_DOCUMENT_FISCAL SET ETAT_TYPE = 'DI_ECHUE', TYPE = 'ECHU' WHERE TYPE = 'ECHUE';
UPDATE ETAT_DOCUMENT_FISCAL SET ETAT_TYPE = 'DI_SUSPENDUE', TYPE = 'SUSPENDU' WHERE TYPE = 'SUSPENDUE';
UPDATE ETAT_DOCUMENT_FISCAL SET ETAT_TYPE = 'DI_RETOURNEE', TYPE = 'RETOURNE' WHERE TYPE = 'RETOURNEE';
ALTER TABLE ETAT_DOCUMENT_FISCAL RENAME COLUMN DECLARATION_ID TO DOCUMENT_FISCAL_ID;
ALTER TABLE ETAT_DOCUMENT_FISCAL DROP CONSTRAINT FK_ET_DI_DI_ID;
ALTER TABLE ETAT_DOCUMENT_FISCAL ADD CONSTRAINT FK_ET_DOCFISC_DOCFISC_ID FOREIGN KEY (DOCUMENT_FISCAL_ID) REFERENCES DOCUMENT_FISCAL;
ALTER TABLE ETAT_DOCUMENT_FISCAL MODIFY DATE_OBTENTION NOT NULL;

ALTER TABLE EVENEMENT_FISCAL DROP CONSTRAINT FK_EVTFISC_DECL_ID;
ALTER TABLE EVENEMENT_FISCAL ADD CONSTRAINT FK_EVTFISC_DOCFISC_ID FOREIGN KEY (DECLARATION_ID) REFERENCES DOCUMENT_FISCAL;

-- Migration des autres documents fiscaux
ALTER TABLE DOCUMENT_FISCAL ADD LB_TYPE NVARCHAR2(20);
ALTER TABLE DOCUMENT_FISCAL ADD AR_DATE_DEMANDE NUMBER(10,0);
ALTER TABLE DOCUMENT_FISCAL ADD DBF_PERIODE_FISCALE NUMBER(10,0);
ALTER TABLE DOCUMENT_FISCAL ADD DBF_DATE_REQ_RADIATION NUMBER(10,0);
ALTER TABLE DOCUMENT_FISCAL ADD DD_PERIODE_FISCALE NUMBER(10);
ALTER TABLE DOCUMENT_FISCAL ADD DD_IMMEUBLE_ID NUMBER(19);
ALTER TABLE DOCUMENT_FISCAL ADD DD_NUMERO_SEQUENCE NUMBER(10);
ALTER TABLE DOCUMENT_FISCAL ADD DD_CODE_CONTROLE NVARCHAR2(6);
ALTER TABLE DOCUMENT_FISCAL ADD CONSTRAINT FK_DOCFISC_DD_RF_IMMEUBLE_ID FOREIGN KEY (DD_IMMEUBLE_ID) REFERENCES RF_IMMEUBLE;

ALTER TABLE ETAT_DOCUMENT_FISCAL ADD CLE_ARCHIVAGE NVARCHAR2(40);

-- Migrer à proprement parler

-- Principes:
-- 1) On tente de préserver au mieux les meta-informations
-- 2) LOG_CDATE et LOG_CUSER reprennent les informations de date et utilisateurs qu'on peut au mieux récupérer de l'original. Voir le détail pour chaque entité.
-- 3) LOG_MUSER est mis à 'Migration SIFISC-21866' et LOG_MDATE à l'heure système de la migration de l'entité.

-- Autres documents fiscaux --
------------------------------
-- LOG_CDATE et LOG_CUSER originaux sont repris de l'original.
INSERT INTO DOCUMENT_FISCAL (ID, DOCUMENT_TYPE, ANNULATION_DATE, ANNULATION_USER, LOG_CDATE, LOG_CUSER, LOG_MDATE, LOG_MUSER, TIERS_ID, LB_TYPE, AR_DATE_DEMANDE, DBF_DATE_REQ_RADIATION, DBF_PERIODE_FISCALE, DD_CODE_CONTROLE, DD_NUMERO_SEQUENCE, DD_PERIODE_FISCALE, DD_IMMEUBLE_ID)
	SELECT ID, DOC_TYPE, ANNULATION_DATE, ANNULATION_USER, LOG_CDATE, LOG_CUSER, sysdate, 'Migration SIFISC-21866', ENTREPRISE_ID, LB_TYPE, AR_DATE_DEMANDE, DBF_DATE_REQ_RADIATION, DBF_PERIODE_FISCALE, DD_CODE_CONTROLE, DD_NUMERO_SEQUENCE, DD_PERIODE_FISCALE, DD_IMMEUBLE_ID
	FROM AUTRE_DOCUMENT_FISCAL;

-- Création des états émis --
-----------------------------
-- LOG_CDATE et LOG_CUSER sont repris de l'original.
-- DATE_OBTENTION est renseigné par DATE_ENVOI de l'original, qui correspond soit à la date d'envoi calculée (le plus souvent), soit à la date de traitement dans le cas d'un envoi online.
INSERT INTO ETAT_DOCUMENT_FISCAL (ID, ETAT_TYPE, TYPE, ANNULATION_DATE, ANNULATION_USER, LOG_CDATE, LOG_CUSER, LOG_MDATE, LOG_MUSER, DATE_OBTENTION, DOCUMENT_FISCAL_ID, DATE_ENVOI_COURRIER, SOURCE, EMOLUMENT, CLE_ARCHIVAGE, CLE_DOCUMENT)
	SELECT HIBERNATE_SEQUENCE.nextval, 'AUTRE_EMIS', 'EMIS', ANNULATION_DATE, ANNULATION_USER, LOG_CDATE, LOG_CUSER, sysdate, 'Migration SIFISC-21866', DATE_ENVOI, ID, NULL, NULL, NULL, CLE_ARCHIVAGE, CLE_DOCUMENT
	FROM AUTRE_DOCUMENT_FISCAL;

-- Création des états rappelés --
---------------------------------
-- On ne connait pas avec certitude l'utilisateur et la date, car le document a été retourné entre temps, écrasant les métadonnées. On fait donc ce qu'on peut sans données originales. (1096 en date du 16.10.2017)
-- LOG_CDATE est renseignés par la DATE_RAPPEL, ce qui n'est pas exact car elle correspond à la date effective de l'envoi du rappel (pas d'envoi online possible jusqu'à présent).
-- LOG_CUSER est renseignés comme 'Migration SIFISC-21866'.
-- DATE_OBTENTION est renseigné par DATE_RAPPEL de l'original.
INSERT INTO ETAT_DOCUMENT_FISCAL (ID, ETAT_TYPE, TYPE, ANNULATION_DATE, ANNULATION_USER, LOG_CDATE, LOG_CUSER, LOG_MDATE, LOG_MUSER, DATE_OBTENTION, DOCUMENT_FISCAL_ID, DATE_ENVOI_COURRIER, SOURCE, EMOLUMENT, CLE_ARCHIVAGE, CLE_DOCUMENT)
	SELECT HIBERNATE_SEQUENCE.nextval, 'AUTRE_RAPPELE', 'RAPPELE', ANNULATION_DATE, ANNULATION_USER, TO_DATE(DATE_RAPPEL, 'YYYYMMDD'), 'Migration SIFISC-21866', sysdate, 'Migration SIFISC-21866' , DATE_RAPPEL, ID, NULL, NULL, NULL, CLE_ARCHIVAGE_RAPPEL, CLE_DOCUMENT_RAPPEL
	FROM AUTRE_DOCUMENT_FISCAL
	WHERE DATE_RAPPEL IS NOT NULL AND DATE_RETOUR IS NOT NULL;
-- Ici on connait l'utilisateur et la date, car, le document n'ayant pas été retourné, le rappel est la dernière modification survenue. (741 en date du 16.10.2017)
-- LOG_CDATE et LOG_CUSER sont repris de LOG_MDATE et LOG_MUSER de l'original.
-- DATE_OBTENTION est renseigné par DATE_RAPPEL de l'original.
INSERT INTO ETAT_DOCUMENT_FISCAL (ID, ETAT_TYPE, TYPE, ANNULATION_DATE, ANNULATION_USER, LOG_CDATE, LOG_CUSER, LOG_MDATE, LOG_MUSER, DATE_OBTENTION, DOCUMENT_FISCAL_ID, DATE_ENVOI_COURRIER, SOURCE, EMOLUMENT, CLE_ARCHIVAGE, CLE_DOCUMENT)
	SELECT HIBERNATE_SEQUENCE.nextval, 'AUTRE_RAPPELE', 'RAPPELE', ANNULATION_DATE, ANNULATION_USER, LOG_MDATE, LOG_MUSER, sysdate, 'Migration SIFISC-21866' , DATE_RAPPEL, ID, NULL, NULL, NULL, CLE_ARCHIVAGE_RAPPEL, CLE_DOCUMENT_RAPPEL
	FROM AUTRE_DOCUMENT_FISCAL
	WHERE DATE_RAPPEL IS NOT NULL AND DATE_RETOUR IS NULL;

-- Création des états retournés --
----------------------------------
-- LOG_CDATE et LOG_CUSER sont repris de LOG_MDATE et LOG_MUSER de l'original.
-- DATE_OBTENTION est renseigné par la DATE_RETOUR.
INSERT INTO ETAT_DOCUMENT_FISCAL (ID, ETAT_TYPE, TYPE, ANNULATION_DATE, ANNULATION_USER, LOG_CDATE, LOG_CUSER, LOG_MDATE, LOG_MUSER, DATE_OBTENTION, DOCUMENT_FISCAL_ID, DATE_ENVOI_COURRIER, SOURCE, EMOLUMENT, CLE_ARCHIVAGE, CLE_DOCUMENT)
	SELECT HIBERNATE_SEQUENCE.nextval, 'AUTRE_RETOURNE', 'RETOURNE', ANNULATION_DATE, ANNULATION_USER, LOG_MDATE, LOG_MUSER, sysdate, 'Migration SIFISC-21866', DATE_RETOUR, ID, NULL, NULL, NULL, NULL, NULL
	FROM AUTRE_DOCUMENT_FISCAL
	WHERE DATE_RETOUR IS NOT NULL;

-- Création des délais pour les documents concernés --
------------------------------------------------------
-- LOG_CDATE et LOG_CUSER sont repris de LOG_CDATE et LOG_CUSER de l'original.
-- DATE_DEMANDE et DATE_TRAITEMENT reprennent LOG_CDATE.
-- DELAI_ACCORDE_AU est renseigné par DELAI_RETOUR.
INSERT INTO DELAI_DOCUMENT_FISCAL (ID, DELAI_TYPE, ANNULATION_DATE, ANNULATION_USER, LOG_CDATE, LOG_CUSER, LOG_MDATE, LOG_MUSER, DOCUMENT_FISCAL_ID, DATE_DEMANDE, DATE_TRAITEMENT, DELAI_ACCORDE_AU, ETAT, SURSIS, CLE_ARCHIVAGE_COURRIER, CLE_DOCUMENT)
	SELECT HIBERNATE_SEQUENCE.nextval, 'DELAI_AUTRE_DOCUMENT_FISCAL', ANNULATION_DATE, ANNULATION_USER, LOG_CDATE, LOG_CUSER, sysdate, 'Migration SIFISC-21866', ID, TO_CHAR(LOG_CDATE, 'YYYYMMDD'), TO_CHAR(LOG_CDATE, 'YYYYMMDD'), DELAI_RETOUR, 'ACCORDE', 0, NULL, NULL
	FROM AUTRE_DOCUMENT_FISCAL
	WHERE DELAI_RETOUR IS NOT NULL;

CREATE INDEX IDX_DOCFISC_TRS_ID on DOCUMENT_FISCAL (TIERS_ID);
CREATE INDEX IDX_DOCFISC_TYPE_ANNUL_DATE ON DOCUMENT_FISCAL(ANNULATION_DATE, DOCUMENT_TYPE);
CREATE INDEX IDX_DOCFISC_DD_RF_IMMEUBLE_ID ON DOCUMENT_FISCAL (DD_IMMEUBLE_ID);

CREATE INDEX IDX_ET_DOCFISC_DOCFISC_ID ON ETAT_DOCUMENT_FISCAL(DOCUMENT_FISCAL_ID);
CREATE INDEX IDX_ET_DOCFISC_LOG_MDATE ON ETAT_DOCUMENT_FISCAL(LOG_MDATE);
CREATE INDEX IDX_ET_DOCFISC_SOMMATION ON ETAT_DOCUMENT_FISCAL(DOCUMENT_FISCAL_ID, ANNULATION_DATE, TYPE, DATE_OBTENTION);

CREATE INDEX IDX_DEL_DOCFISC_DOCFISC_ID ON DELAI_DOCUMENT_FISCAL (DOCUMENT_FISCAL_ID);

-- Renommage de l'ancienne table.
DROP INDEX IDX_DD_RF_IMMEUBLE_ID;
ALTER TABLE AUTRE_DOCUMENT_FISCAL RENAME TO AUTRE_DOCUMENT_FISCAL_MIGREE;