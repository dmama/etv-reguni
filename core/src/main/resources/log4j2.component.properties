# [FISCPROJ-1211] Dans les webapp, log4j2 utilise par défaut un sélecteur de context qui est dépendant du classloader (ClassLoaderContextSelector) dans
#                 le but louable de libérer les loggers statiques dans le cas où plusieurs applications sont déployées dans un container et que l'une
#                 d'entres-elles est déchargée. Ce context selector est couplé avec un filtre (Log4jServletFilter) qui va activer le context spécifique
#                 d'une application ou d'une autre lors de chaque requête traitée par le container (la classe Log4jServletContainerInitializer est
#                 responsable de cette configuration).
#
#                 Tout ceci fonctionne bien pour les threads qui traitent les requêtes HTTP, mais ne fonctionne pas pour les threads créés par
#                 l'application elle-même (executor services, threads quartz, ...) : pour ces threads, la configuration log4j2 spécifiée dans la
#                 webapp (paramètre 'log4jConfiguration') est *ignorée* et c'est le configuration par défaut de log4j2 qui est utilisée : c'est-à-dire
#                 le log des erreurs dans la console.
#
#                 Ici, on change le sélecteur de context pour utiliser un context basique, qui s'applique indifféremment à tous les threads, et qui permet
#                 donc d'avoir une configuration log4j2 uniforme dans toute l'application.
#
#                 Note: on peut le faire sans risque, parce que Unireg est la seule webapp déployée dans le container : lorsqu'on arrête Unireg, on arrête
#                 aussi le container.
#
#                 Voir : https://logging.apache.org/log4j/2.x/manual/configuration.html
log4j2.contextSelector=org.apache.logging.log4j.core.selector.BasicContextSelector