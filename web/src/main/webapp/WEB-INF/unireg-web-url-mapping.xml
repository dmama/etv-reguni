<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- ======== Config MVC Spring ======== -->

	<!-- Scans within the base package of the application for @Components to configure as beans @Controller, @Service, @Configuration, etc. -->
	<!-- (msi, 12.04.2011) Désactivé. On préfère instancier les beans des contrôleurs à la main, de manière à gérer finement l'injection des dépendances -->
	<!--<context:component-scan base-package="ch.vd.unireg" />-->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- (msi, 12.04.2011) Désactivé. On préfère instancier les handlers à la main, de manière à pouvoir spécifier les intercepteurs qui vont bien (ajax, ...) -->
	<!--<mvc:annotation-driven />-->

	<!-- HandlerAdapter qui enregistre les contrôleurs spring 3.x (@Controller) dans le DispatcherServlet -->
	<bean class="ch.vd.unireg.servlet.UniregRequestMappingHandlerAdapter">
		<!-- [SIFISC-2337] ajouté le JSON message converter (+ explicité les autres) -->
		<property name="messageConverters">
			<array>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="writeAcceptCharset" value="false"/>
				</bean>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="objectMapper">
						<bean class="ch.vd.unireg.json.JsonObjectMapperFactory"/>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!-- HandlerMapping qui utiliser les annotations @RequestMapping pour enregistrer le mapping url-contrôleur -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	</bean>

	<!-- ======== Config Spring Remoting ======== -->

	<!-- Url mapper pour le Spring Remoting de l'application Unireg. -->
	<bean id="remotingUrlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="urlMap">
			<map>
				<!-- Mapping des beans de remoting -->
				<entry key="/tiersSearcher.remoting" value-ref="remoteTiersSearch" />
			</map>
		</property>
	</bean>

	<!-- ======== Exceptions resolvers ======== -->

	<!-- Exception resolver qui ne résoud rien mais notifie par email les exceptions levées -->
	<bean id="notifyingExceptionResolver" class="ch.vd.unireg.servlet.NotifyingExceptionResolver">
		<property name="order" value="-1"/> <!-- pour prendre la précédence sur tous les autres exceptions resolvers -->
		<property name="notificationService" ref="emailNotificationService" />
		<property name="applicationName" value="Unireg ${project.version}" />
	</bean>

	<!-- Exception resolver pour activer les annotations @ExceptionHandler sur les controllers -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
		<property name="order" value="10"/> <!-- pour prendre la précédence sur les JSONExceptionResolver et urlMappingExceptionResolver -->
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
			</list>
		</property>
	</bean>

	<!-- Exception resolver pour exposer les exceptions sous format JSON aux clients qui attendent du JSON -->
	<bean class="ch.vd.unireg.servlet.JSONExceptionResolver">
		<property name="order" value="11"/> <!-- pour prendre la précédence sur le urlMappingExceptionResolver -->
	</bean>

	<!--Pour catcher les erreurs de validation et d'action automatiquement et les afficher sur la dernière page -->
	<bean class="ch.vd.unireg.servlet.ActionExceptionResolver">
		<property name="order" value="19"/> <!-- pour prendre la précédence sur le urlMappingExceptionResolver -->
	</bean>

	<!-- Exception resolver par défaut -->
	<bean id="urlMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="order" value="20"/>
		<!--
		(msi 29.05.2012) Désactivé le code d'erreur 500 qui est catché par IAM et qui affiche une page très basique.
		C'est plus intéressant pour l'utilisateur d'avoir une page complète avec tous les détails du problème.
		<property name="defaultStatusCode" value="500"/>
		-->
		<property name="exceptionMappings">
			<map>
				<!-- En cas de problème de connexion, on renvoie vers la JSP jdbcConnection.jsp -->
				<entry key="org.springframework.jdbc.UncategorizedSQLException" value="errors/jdbcConnection" />
				<entry key="ch.vd.unireg.interfaces.civil.ServiceCivilException" value="errors/errorServiceCivil" />
				<entry key="ch.vd.unireg.interfaces.entreprise.ServiceEntrepriseException" value="errors/errorServiceEntreprise" />
				<entry key="ch.vd.unireg.type.TypePermisInvalideException" value="errors/permisInvalide" />
				<entry key="ch.vd.unireg.interfaces.infra.ServiceInfrastructureException" value="errors/errorServiceInfrastructure" />
				<entry key="ch.vd.unireg.interfaces.service.ServiceSecuriteException" value="errors/errorServiceSecurite" />
				<entry key="ch.vd.unireg.interfaces.InterfaceDataException" value="errors/errorDataInterface" />
				<!-- En cas d'exception inattendue, on renvoie vers la JSP error.jsp -->
				<entry key="java.lang.Exception" value="errors/error" />
				<entry key="ch.vd.unireg.security.AccessDeniedException" value="errors/accessDeniedIHM" />
				<entry key="org.apache.commons.lang3.NotImplementedException" value="errors/notImplemented" />
				<entry key="ch.vd.unireg.common.EditiqueCommunicationException" value="errors/editique" />
				<entry key="ch.vd.unireg.common.ObjectNotFoundException" value="errors/objectNotFound" />
				<entry key="ch.vd.unireg.adresse.AdressesResolutionException" value="errors/adressesResolution" />
				<entry key="ch.vd.unireg.common.DonneesCivilesException" value="errors/donneesCiviles" />
				<entry key="ch.vd.unireg.webservice.sipf.BVRPlusClientException" value="errors/bvrplus" />
				<entry key="ch.vd.unireg.editique.print.PrintPCLException" value="errors/errorPrintPCL" />
				<entry key="org.springframework.orm.hibernate4.HibernateOptimisticLockingFailureException" value="errors/optimisticLockingFailure" />
			</map>
		</property>
	</bean>

</beans>
