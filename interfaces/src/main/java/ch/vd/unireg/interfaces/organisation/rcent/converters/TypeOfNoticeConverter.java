package ch.vd.unireg.interfaces.organisation.rcent.converters;

import org.jetbrains.annotations.NotNull;

import ch.vd.evd0022.v3.TypeOfNotice;
import ch.vd.unireg.type.TypeEvenementEntreprise;

public class TypeOfNoticeConverter extends BaseEnumConverter<TypeOfNotice, TypeEvenementEntreprise> {

	@Override
	@NotNull
	public TypeEvenementEntreprise convert(@NotNull TypeOfNotice value) {
		switch (value) {
		case FOSC_NOUVELLE_ENTREPRISE:
			return TypeEvenementEntreprise.FOSC_NOUVELLE_ENTREPRISE;
		case FOSC_NOUVELLE_SUCCURSALE:
			return TypeEvenementEntreprise.FOSC_NOUVELLE_SUCCURSALE;
		case FOSC_DISSOLUTION_ENTREPRISE:
			return TypeEvenementEntreprise.FOSC_DISSOLUTION_ENTREPRISE;
		case FOSC_RADIATION_ENTREPRISE:
			return TypeEvenementEntreprise.FOSC_RADIATION_ENTREPRISE;
		case FOSC_RADIATION_SUCCURSALE:
			return TypeEvenementEntreprise.FOSC_RADIATION_SUCCURSALE;
		case FOSC_REVOCATION_DISSOLUTION_ENTREPRISE:
			return TypeEvenementEntreprise.FOSC_REVOCATION_DISSOLUTION_ENTREPRISE;
		case FOSC_REINSCRIPTION_ENTREPRISE:
			return TypeEvenementEntreprise.FOSC_REINSCRIPTION_ENTREPRISE;
		case FOSC_AUTRE_MUTATION:
			return TypeEvenementEntreprise.FOSC_AUTRE_MUTATION;
		case IMPORTATION_ENTREPRISE:
			return TypeEvenementEntreprise.IMPORTATION_ENTREPRISE;
		case FOSC_AVIS_PREALABLE_OUVERTURE_FAILLITE:
			return TypeEvenementEntreprise.FOSC_AVIS_PREALABLE_OUVERTURE_FAILLITE;
		case FOSC_PUBLICATION_FAILLITE_ET_APPEL_AUX_CREANCIERS:
			return TypeEvenementEntreprise.FOSC_PUBLICATION_FAILLITE_ET_APPEL_AUX_CREANCIERS;
		case FOSC_SUSPENSION_FAILLITE:
			return TypeEvenementEntreprise.FOSC_SUSPENSION_FAILLITE;
		case FOSC_ETAT_DE_COLLOCATION_ET_INVENTAIRE_DANS_FAILLITE:
			return TypeEvenementEntreprise.FOSC_ETAT_DE_COLLOCATION_ET_INVENTAIRE_DANS_FAILLITE;
		case FOSC_TABLEAU_DE_DISTRIBUTION_ET_DECOMPTE_FINAL_DANS_FAILLITE:
			return TypeEvenementEntreprise.FOSC_TABLEAU_DE_DISTRIBUTION_ET_DECOMPTE_FINAL_DANS_FAILLITE;
		case FOSC_CLOTURE_DE_LA_FAILLITE:
			return TypeEvenementEntreprise.FOSC_CLOTURE_DE_LA_FAILLITE;
		case FOSC_REVOCATION_DE_LA_FAILLITE:
			return TypeEvenementEntreprise.FOSC_REVOCATION_DE_LA_FAILLITE;
		case FOSC_VENTE_AUX_ENCHERES_FORCEE_IMMEUBLES_DANS_FAILLITE:
			return TypeEvenementEntreprise.FOSC_VENTE_AUX_ENCHERES_FORCEE_IMMEUBLES_DANS_FAILLITE;
		case FOSC_ETAT_DES_CHARGES_DANS_FAILLITE:
			return TypeEvenementEntreprise.FOSC_ETAT_DES_CHARGES_DANS_FAILLITE;
		case FOSC_COMMUNICATION_DANS_FAILLITE:
			return TypeEvenementEntreprise.FOSC_COMMUNICATION_DANS_FAILLITE;
		case FOSC_DEMANDE_SURSIS_CONCORDATAIRE:
			return TypeEvenementEntreprise.FOSC_DEMANDE_SURSIS_CONCORDATAIRE;
		case FOSC_SURSIS_CONCORDATAIRE_PROVISOIRE:
			return TypeEvenementEntreprise.FOSC_SURSIS_CONCORDATAIRE_PROVISOIRE;
		case FOSC_SURSIS_CONCORDATAIRE:
			return TypeEvenementEntreprise.FOSC_SURSIS_CONCORDATAIRE;
		case FOSC_APPEL_AUX_CREANCIERS_DANS_CONCORDAT:
			return TypeEvenementEntreprise.FOSC_APPEL_AUX_CREANCIERS_DANS_CONCORDAT;
		case FOSC_AUDIENCE_DE_LIQUIDATION_PAR_ABANDON_ACTIF:
			return TypeEvenementEntreprise.FOSC_AUDIENCE_DE_LIQUIDATION_PAR_ABANDON_ACTIF;
		case FOSC_PROLONGATION_SURSIS_CONCORDATAIRE:
			return TypeEvenementEntreprise.FOSC_PROLONGATION_SURSIS_CONCORDATAIRE;
		case FOSC_ANNULATION_SURSIS_CONCORDATAIRE:
			return TypeEvenementEntreprise.FOSC_ANNULATION_SURSIS_CONCORDATAIRE;
		case FOSC_CONVOCATION_A_ASSEMBLEE_DES_CREANCIERS:
			return TypeEvenementEntreprise.FOSC_CONVOCATION_A_ASSEMBLEE_DES_CREANCIERS;
		case FOSC_HOMOLOGATION_DU_CONCORDAT:
			return TypeEvenementEntreprise.FOSC_HOMOLOGATION_DU_CONCORDAT;
		case FOSC_REFUS_HOMOLOGATION_DU_CONCORDAT:
			return TypeEvenementEntreprise.FOSC_REFUS_HOMOLOGATION_DU_CONCORDAT;
		case FOSC_REVOCATION_DU_CONCORDAT:
			return TypeEvenementEntreprise.FOSC_REVOCATION_DU_CONCORDAT;
		case FOSC_ETAT_DE_COLLOCATION_DANS_CONCORDAT_PAR_ABANDON_D_ACTIF:
			return TypeEvenementEntreprise.FOSC_ETAT_DE_COLLOCATION_DANS_CONCORDAT_PAR_ABANDON_D_ACTIF;
		case FOSC_TABLEAU_DE_DISTRIBUTION_ET_DECOMPTE_FINAL_DANS_CONCORDAT_PAR_ABANDON_D_ACTIF:
			return TypeEvenementEntreprise.FOSC_TABLEAU_DE_DISTRIBUTION_ET_DECOMPTE_FINAL_DANS_CONCORDAT_PAR_ABANDON_D_ACTIF;
		case FOSC_CONCORDAT_DE_BANQUE_ET_DE_CAISSE_EPARGNE:
			return TypeEvenementEntreprise.FOSC_CONCORDAT_DE_BANQUE_ET_DE_CAISSE_EPARGNE;
		case FOSC_COMMUNICATION_DANS_LE_CONCORDAT:
			return TypeEvenementEntreprise.FOSC_COMMUNICATION_DANS_LE_CONCORDAT;
		case FOSC_VENTE_AUX_ENCHERES_FORCEE_IMMEUBLES_DANS_POURSUITE:
			return TypeEvenementEntreprise.FOSC_VENTE_AUX_ENCHERES_FORCEE_IMMEUBLES_DANS_POURSUITE;
		case FOSC_COMMANDEMENT_DE_PAYER:
			return TypeEvenementEntreprise.FOSC_COMMANDEMENT_DE_PAYER;
		case FOSC_PROCES_VERBAL_SEQUESTRE:
			return TypeEvenementEntreprise.FOSC_PROCES_VERBAL_SEQUESTRE;
		case FOSC_PROCES_VERBAL_SAISIE:
			return TypeEvenementEntreprise.FOSC_PROCES_VERBAL_SAISIE;
		case FOSC_COMMUNICATION_DANS_LA_POURSUITE:
			return TypeEvenementEntreprise.FOSC_COMMUNICATION_DANS_LA_POURSUITE;
		case FOSC_APPEL_AUX_CREANCIERS_SUITE_FUSION_OU_SCISSION:
			return TypeEvenementEntreprise.FOSC_APPEL_AUX_CREANCIERS_SUITE_FUSION_OU_SCISSION;
		case FOSC_APPEL_AUX_CREANCIERS_SUITE_LIQUIDATION:
			return TypeEvenementEntreprise.FOSC_APPEL_AUX_CREANCIERS_SUITE_LIQUIDATION;
		case FOSC_APPEL_AUX_CREANCIERS_SUITE_REDUCTION_CAPITAL:
			return TypeEvenementEntreprise.FOSC_APPEL_AUX_CREANCIERS_SUITE_REDUCTION_CAPITAL;
		case FOSC_APPEL_AUX_CREANCIERS_SUITE_TRANSFORMATION_SA_EN_SARL:
			return TypeEvenementEntreprise.FOSC_APPEL_AUX_CREANCIERS_SUITE_TRANSFORMATION_SA_EN_SARL;
		case FOSC_APPEL_AUX_CREANCIERS_SUITE_TRANSFERT_ETRANGER:
			return TypeEvenementEntreprise.FOSC_APPEL_AUX_CREANCIERS_SUITE_TRANSFERT_ETRANGER;
		case IDE_NOUVELLE_INSCRIPTION:
			return TypeEvenementEntreprise.IDE_NOUVELLE_INSCRIPTION;
		case IDE_MUTATION:
			return TypeEvenementEntreprise.IDE_MUTATION;
		case IDE_RADIATION:
			return TypeEvenementEntreprise.IDE_RADIATION;
		case IDE_REACTIVATION:
			return TypeEvenementEntreprise.IDE_REACTIVATION;
		case IDE_ANNULATION:
			return TypeEvenementEntreprise.IDE_ANNULATION;
		case RCPERS_DECES:
			return TypeEvenementEntreprise.RCPERS_DECES;
		case RCPERS_ANNULATION_DECES:
			return TypeEvenementEntreprise.RCPERS_ANNULATION_DECES;
		case RCPERS_DEPART:
			return TypeEvenementEntreprise.RCPERS_DEPART;
		case RCPERS_ANNULATION_DEPART:
			return TypeEvenementEntreprise.RCPERS_ANNULATION_DEPART;
		case RCPERS_CORRECTION_DONNEES:
			return TypeEvenementEntreprise.RCPERS_CORRECTION_DONNEES;
		case REE_NOUVELLE_INSCRIPTION:
			return TypeEvenementEntreprise.REE_NOUVELLE_INSCRIPTION;
		case REE_MUTATION:
			return TypeEvenementEntreprise.REE_MUTATION;
		case REE_SUPPRESSION:
			return TypeEvenementEntreprise.REE_SUPPRESSION;
		case REE_RADIATION:
			return TypeEvenementEntreprise.REE_RADIATION;
		case REE_TRANSFERT_ETABLISSEMENT:
			return TypeEvenementEntreprise.REE_TRANSFERT_ETABLISSEMENT;
		case REE_REACTIVATION:
			return TypeEvenementEntreprise.REE_REACTIVATION;
		case REE_NOUVEL_ETABLISSEMENT:
			return TypeEvenementEntreprise.REE_NOUVEL_ETABLISSEMENT;
		default:
			throw new IllegalArgumentException(genericUnsupportedValueMessage(value));
		}
	}
}
